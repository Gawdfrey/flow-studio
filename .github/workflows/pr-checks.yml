name: PR Checks

on:
  pull_request:
    branches: [main]
    paths:
      - "packages/**"
      - ".github/workflows/**"
      - ".github/actions/**"
      - "pnpm-lock.yaml"
      - "package.json"
      - "pnpm-workspace.yaml"
      - "turbo.json"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Main validation job that runs quality checks and builds
  validate:
    name: Validate Changes
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ github.token }}

      - name: Setup workspace
        uses: ./.github/actions/setup

      - name: Build and test
        uses: ./.github/actions/build-and-test

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            packages/bpmn-js-markdown-documentation-panel/dist/
            packages/bpmn-js-markdown-documentation-panel/.sonda/
          retention-days: 1

  # Test examples to ensure they work with the current build
  test-examples:
    name: Test Examples
    runs-on: ubuntu-latest
    needs: validate

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ github.token }}

      - name: Setup workspace
        uses: ./.github/actions/setup

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: packages/bpmn-js-markdown-documentation-panel/

      - name: Test examples
        run: |
          echo "🧪 Testing examples..."

          # Test viewer example
          cd examples/bpmn-viewer-example
          pnpm install
          pnpm run type-check
          pnpm run build
          echo "✅ Viewer example builds successfully"

          # Verify example can import the package
          echo "🔍 Verifying package integration..."
          if [ -f "../../packages/bpmn-js-markdown-documentation-panel/dist/bpmn-js-entry.js" ]; then
            echo "✅ Package build available for examples"
          else
            echo "❌ Package build missing"
            exit 1
          fi

  # Bundle analysis and size monitoring
  bundle-analysis:
    name: Bundle Analysis
    runs-on: ubuntu-latest
    needs: validate

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ github.token }}

      - name: Setup workspace
        uses: ./.github/actions/setup

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: packages/bpmn-js-markdown-documentation-panel/

      - name: Run detailed bundle analysis
        run: |
          cd packages/bpmn-js-markdown-documentation-panel
          echo "📊 Running comprehensive bundle analysis..."

          # Run our enhanced analysis
          pnpm run analyze > bundle-analysis.md

          # Display the analysis
          echo "## Bundle Analysis Results"
          cat bundle-analysis.md

          # Check for size regressions (if we had previous data)
          echo "📈 Checking for size regressions..."
          echo "Current ESM build: $(ls -lh dist/bpmn-js-entry.js | awk '{print $5}')"
          echo "Current CommonJS build: $(ls -lh dist/camunda-modeler-entry.js | awk '{print $5}')"

          # Additional dependency analysis
          echo "🔍 Analyzing dependencies..."
          if [ -f ".sonda/bpmn-js-entry.json" ]; then
            echo "ESM dependencies:"
            node -e "
              const data = require('./.sonda/bpmn-js-entry.json');
              data.dependencies.forEach(dep => {
                console.log('  - ' + dep.name + ' (' + dep.paths.length + ' path(s))');
              });
            "
          fi

          if [ -f ".sonda/camunda-modeler-entry.json" ]; then
            echo "CommonJS dependencies:"
            node -e "
              const data = require('./.sonda/camunda-modeler-entry.json');
              data.dependencies.forEach(dep => {
                console.log('  - ' + dep.name + ' (' + dep.paths.length + ' path(s))');
              });
            "
          fi

      - name: Upload bundle analysis
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis
          path: packages/bpmn-js-markdown-documentation-panel/bundle-analysis.md
          retention-days: 7

  # Final status check
  pr-ready:
    name: PR Ready
    runs-on: ubuntu-latest
    needs: [validate, test-examples, bundle-analysis]

    steps:
      - name: PR Status
        run: |
          echo "🎉 All PR checks passed!"
          echo "✅ Code quality checks passed"
          echo "✅ Build successful"
          echo "✅ Examples working"
          echo "✅ Bundle analysis completed"
          echo "✅ Security audit passed"
          echo ""
          echo "🚀 This PR is ready for review!"
