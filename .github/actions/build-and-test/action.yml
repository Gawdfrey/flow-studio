name: "Build and Test"
description: "Build packages and run quality checks including tests"

inputs:
  skip-quality-checks:
    description: "Skip quality checks (type-check, lint, format)"
    required: false
    default: "false"

  skip-tests:
    description: "Skip running tests"
    required: false
    default: "false"

  skip-build:
    description: "Skip build step"
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - name: Run quality checks
      if: inputs.skip-quality-checks != 'true'
      run: |
        echo "🔍 Running quality checks..."
        pnpm run type-check
        pnpm run format-and-lint
        pnpm run knip
        echo "✅ Quality checks completed"
      shell: bash

    - name: Install Playwright browsers
      if: inputs.skip-tests != 'true'
      run: |
        pnpm --filter bpmn-js-markdown-documentation-panel exec playwright install --with-deps chromium
      shell: bash

    - name: Run tests
      if: inputs.skip-tests != 'true'
      run: |
        echo "🧪 Running test suite..."
        pnpm run test
        echo "✅ All tests passed"
      shell: bash

    - name: Build packages
      if: inputs.skip-build != 'true'
      run: |
        echo "🔨 Building packages..."
        pnpm run build
        echo "✅ Build completed"
      shell: bash

    - name: Verify build artifacts
      if: inputs.skip-build != 'true'
      run: |
        echo "🔍 Verifying build artifacts..."

        # Check critical build outputs exist
        if [ ! -f "packages/bpmn-js-markdown-documentation-panel/dist/bpmn-js-entry.js" ]; then
          echo "❌ ESM build missing"
          exit 1
        fi
        if [ ! -f "packages/bpmn-js-markdown-documentation-panel/dist/camunda-modeler-entry.js" ]; then
          echo "❌ CommonJS build missing"
          exit 1
        fi
        if [ ! -f "packages/bpmn-js-markdown-documentation-panel/dist/index.js" ]; then
          echo "❌ Plugin manifest missing"
          exit 1
        fi
        if [ ! -f "packages/bpmn-js-markdown-documentation-panel/dist/style.css" ]; then
          echo "❌ Styles missing"
          exit 1
        fi
        echo "✅ All build artifacts present"
      shell: bash

    - name: Analyze bundle sizes
      if: inputs.skip-build != 'true'
      shell: bash
      run: |
        echo "📊 Running bundle analysis with Sonda..."
        cd packages/bpmn-js-markdown-documentation-panel

        # Run Sonda analysis (it automatically detects Rolldown builds)
        if [ -d ".sonda" ]; then
          echo "📋 Generating bundle analysis report..."
          pnpm run analyze
        else
          echo "⚠️ Sonda analysis not available, falling back to basic size check"
          
          # Basic size check as fallback
          esm_size=$(wc -c < dist/bpmn-js-entry.js)
          cjs_size=$(wc -c < dist/camunda-modeler-entry.js)
          css_size=$(wc -c < dist/style.css)
          
          echo "📦 Basic Bundle Size Report"
          echo "=========================="
          echo "ESM Build: $(echo $esm_size | numfmt --to=iec-i --suffix=B)"
          echo "CommonJS Build: $(echo $cjs_size | numfmt --to=iec-i --suffix=B)"
          echo "CSS: $(echo $css_size | numfmt --to=iec-i --suffix=B)"
          
          # Check thresholds
          if [ $esm_size -gt 51200 ]; then  # 50KB
            echo "⚠️ ESM build is large (>50KB)"
          fi
          if [ $cjs_size -gt 102400 ]; then  # 100KB
            echo "⚠️ CommonJS build is large (>100KB)"
          fi
        fi
